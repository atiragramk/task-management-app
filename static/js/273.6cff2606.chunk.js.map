{"version":3,"file":"static/js/273.6cff2606.chunk.js","mappings":"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","sources":["components/ErrorBoundary/ErrorBoundary.tsx","components/ErrorMessage/styled.ts","components/ErrorMessage/ErrorMessage.tsx","components/Modal/styled.ts","components/Modal/Modal.tsx","pages/Projects/selectors/projects.ts","pages/Projects/components/CreateProjectModal/CreateProjectModal.tsx","pages/Projects/styled.ts","pages/Projects/constants.ts","pages/Projects/Projects.tsx","store/modal/selectors/modal.ts"],"sourcesContent":["import { Component, ReactNode } from \"react\";\nimport { ErrorMessage } from \"../ErrorMessage\";\n\ntype TProps = {\n  children?: ReactNode;\n}\ntype  TState = {\n  error: boolean;\n}\n\n\nexport class ErrorBoundary extends Component<TProps, TState> {\n  state = {\n    error: false,\n  };\n\n  componentDidCatch(error: Error) {\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n    return this.props.children;\n  }\n}\n","import { styled } from \"@mui/material\";\nimport { Container } from \"@mui/system\";\n\nexport const StyledContainer = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { Button } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport error from \"../../assets/img/error.gif\";\nimport { StyledContainer } from \"./styled\";\n\nexport const ErrorMessage = () => {\n  return (\n    <StyledContainer>\n      <img src={error} alt=\"error\" />\n      <Button component={Link} variant=\"contained\" to=\"/\">\n        Back to Main\n      </Button>\n    </StyledContainer>\n  );\n};\n","import { DialogContent, IconButton, styled, Typography } from \"@mui/material\";\n\nexport const StyledDialogContent = styled(DialogContent)`\n  padding-top: 20px;\n`;\n\nexport const StyledIconButton = styled(IconButton)`\n  position: absolute;\n  right: 8px;\n  top: 10px;\n  color: \"#9E9E9E\";\n`;\n\nexport const StyledTypography = styled(Typography)`\n  min-width: 550px;\n  padding: 16px;\n`;\n","import { ReactNode, MouseEventHandler } from \"react\";\nimport React from \"react\";\n\nimport { Dialog, DialogActions } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Slide from \"@mui/material/Slide\";\nimport { TransitionProps } from \"@mui/material/transitions\";\nimport {\n  StyledDialogContent,\n  StyledIconButton,\n  StyledTypography,\n} from \"./styled\";\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>\n) {\n  return <Slide ref={ref} {...props} />;\n});\n\ntype ModalProps = {\n  title: string;\n  info?: boolean;\n  children?: ReactNode;\n  formName?: string;\n  loading?: boolean;\n  onClose: Function;\n  onConfirm?: () => void;\n};\n\nexport const Modal: React.FC<ModalProps> = (props) => {\n  const { title, children, onClose, formName, onConfirm, loading, info } =\n    props;\n  const color = formName ? \"primary\" : \"error\";\n\n  return (\n    <Dialog\n      keepMounted\n      TransitionComponent={Transition}\n      maxWidth=\"md\"\n      open={true}\n    >\n      {info ? (\n        <StyledTypography variant=\"h6\">{title}</StyledTypography>\n      ) : (\n        <StyledTypography variant=\"h6\">{title}</StyledTypography>\n      )}\n\n      <StyledIconButton\n        aria-label=\"close\"\n        onClick={onClose as MouseEventHandler}\n      >\n        <CloseIcon />\n      </StyledIconButton>\n\n      <StyledDialogContent dividers>{children}</StyledDialogContent>\n      {!info && (\n        <DialogActions>\n          <LoadingButton\n            disabled={loading}\n            size=\"small\"\n            variant=\"outlined\"\n            onClick={onClose as MouseEventHandler}\n          >\n            Cancel\n          </LoadingButton>\n          <LoadingButton\n            type=\"submit\"\n            color={color}\n            disabled={loading}\n            form={formName}\n            size=\"small\"\n            onClick={onConfirm as MouseEventHandler}\n            variant=\"contained\"\n          >\n            Confirm\n          </LoadingButton>\n        </DialogActions>\n      )}\n    </Dialog>\n  );\n};\n","import { createSelector } from \"reselect\";\nimport { RootState } from \"../../../store\";\n\nconst projectsStateSelector = (state: RootState) => state.projects;\n\nexport const projectsLoadingSelector = createSelector(\n  projectsStateSelector,\n  (projects) => projects.loading\n);\n\nexport const projectsErrorSelector = createSelector(\n  projectsStateSelector,\n  (projects) => projects.error\n);\n\nexport const projectsDataSelector = createSelector(\n  projectsStateSelector,\n  (projects) => projects.data\n);\n\nexport const projectCreateStateSelector = createSelector(\n  projectsStateSelector,\n  (projects) => projects.createState\n);\n","import { Modal } from \"../../../../components/Modal\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { Project } from \"../../../../types\";\nimport { FormControl, FormLabel, TextField } from \"@mui/material\";\nimport { ReactNode } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { projectCreateStateSelector } from \"../../selectors/projects\";\n\ntype CreateProjectModalProps = {\n  onClose: () => void;\n  onConfirm: (data: Partial<Project>) => void;\n};\n\nexport const CreateProjectModal: React.FC<CreateProjectModalProps> = ({\n  onClose,\n  onConfirm,\n}) => {\n  const { loading } = useSelector(projectCreateStateSelector);\n  const createProjectSchema = yup.object().shape({\n    name: yup.string().required(\"Name is required\"),\n    description: yup.string().required(\"Description is required\"),\n  });\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(createProjectSchema),\n  });\n  const onSubmit = async (values: Partial<Project>) => {\n    try {\n      onConfirm(values);\n    } catch (error) {}\n  };\n  return (\n    <Modal\n      loading={loading}\n      formName=\"create_project\"\n      title=\"Create Project\"\n      onClose={onClose}\n    >\n      <form onSubmit={handleSubmit(onSubmit)} id=\"create_project\">\n        <FormControl sx={{ width: \"100%\" }}>\n          <FormLabel required>Project Name</FormLabel>\n          <Controller\n            name=\"name\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => (\n              <TextField\n                error={Boolean(errors.name)}\n                helperText={errors.name?.message as ReactNode}\n                size=\"small\"\n                {...field}\n              />\n            )}\n          />\n        </FormControl>\n        <FormControl sx={{ width: \"100%\" }}>\n          <FormLabel required>Description</FormLabel>\n          <Controller\n            name=\"description\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => (\n              <TextField\n                multiline={true}\n                rows={5}\n                error={Boolean(errors.description)}\n                helperText={errors.description?.message as ReactNode}\n                size=\"small\"\n                {...field}\n              />\n            )}\n          />\n        </FormControl>\n      </form>\n    </Modal>\n  );\n};\n","import { styled } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #7e57c2;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","export const MODAL_CREATE_PROJECT_NAME = \"MODAL_CREATE_PROJECT_NAME\";\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nimport { Container } from \"@mui/system\";\nimport { Box, Button, LinearProgress, Typography } from \"@mui/material\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\nimport * as selectors from \"./selectors/projects\";\nimport { AppDispatch } from \"../../store\";\nimport { projectCreateFetch, projectsListFetch } from \"./thunk/projects\";\nimport { modalStateSelector } from \"../../store/modal/selectors/modal\";\nimport { modalOpenToggleAction } from \"../../store/modal/reducer/modal\";\nimport { CreateProjectModal } from \"./components/CreateProjectModal\";\n\nimport { Project } from \"../../types\";\nimport { StyledLink } from \"./styled\";\nimport { MODAL_CREATE_PROJECT_NAME } from \"./constants\";\nimport { ErrorBoundary } from \"../../components/ErrorBoundary\";\nimport { ErrorMessage } from \"../../components/ErrorMessage\";\nimport { authStateSelector } from \"../Auth/selectors/auth\";\n\nconst Projects = () => {\n  const data = useSelector(selectors.projectsDataSelector);\n  const loading = useSelector(selectors.projectsLoadingSelector);\n  const error = useSelector(selectors.projectsErrorSelector);\n\n  const { open, name } = useSelector(modalStateSelector);\n\n  const dispatch: AppDispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(projectsListFetch());\n  }, [dispatch]);\n\n  const columns: GridColDef[] = [\n    {\n      field: \"name\",\n      headerName: \"Name\",\n      width: 200,\n      renderCell: (params) => (\n        <StyledLink to={`/projects/${params.row._id}`}>\n          {params.value}\n        </StyledLink>\n      ),\n    },\n    { field: \"description\", headerName: \"Description\", width: 1000 },\n    { field: \"shortName\", headerName: \"Key\", width: 200 },\n  ];\n\n  const handleCreateProjectModalToogle = () => {\n    dispatch(modalOpenToggleAction({ name: MODAL_CREATE_PROJECT_NAME }));\n  };\n  const handleCreateProject = (data: Partial<Project>) => {\n    dispatch(projectCreateFetch(data));\n  };\n\n  return (\n    <ErrorBoundary>\n      {loading && <LinearProgress />}\n      {!error && !loading && (\n        <Container maxWidth=\"xl\" sx={{ mt: 2 }}>\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"baseline\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Typography variant=\"h5\">Projects</Typography>\n            <Button\n              sx={{ mb: 2 }}\n              onClick={handleCreateProjectModalToogle}\n              variant=\"contained\"\n              size=\"small\"\n              startIcon={<AddIcon />}\n            >\n              Create Project\n            </Button>\n          </Box>\n          <Box sx={{ height: \"550px\" }}>\n            <DataGrid\n              disableColumnMenu\n              components={{\n                LoadingOverlay: LinearProgress,\n              }}\n              loading={loading}\n              rows={data}\n              getRowId={(row) => row._id}\n              columns={columns}\n            />\n          </Box>\n          {open && name === MODAL_CREATE_PROJECT_NAME && (\n            <CreateProjectModal\n              onConfirm={handleCreateProject}\n              onClose={handleCreateProjectModalToogle}\n            />\n          )}\n        </Container>\n      )}\n      {error && !loading && <ErrorMessage />}\n    </ErrorBoundary>\n  );\n};\n\nexport default Projects;\n","import { RootState } from \"../..\";\n\nexport const modalStateSelector = (state: RootState) => state.modal;\n"],"names":["ErrorBoundary","state","error","this","setState","ErrorMessage","props","children","Component","StyledContainer","styled","Container","src","alt","Button","component","Link","variant","to","StyledDialogContent","DialogContent","StyledIconButton","IconButton","StyledTypography","Typography","Transition","React","ref","Slide","Modal","title","onClose","formName","onConfirm","loading","info","color","Dialog","keepMounted","TransitionComponent","maxWidth","open","onClick","Close","dividers","DialogActions","LoadingButton","disabled","size","type","form","projectsStateSelector","projects","projectsLoadingSelector","createSelector","projectsErrorSelector","projectsDataSelector","data","projectCreateStateSelector","createState","CreateProjectModal","useSelector","createProjectSchema","yup","shape","name","required","description","useForm","resolver","yupResolver","control","handleSubmit","errors","formState","onSubmit","values","id","FormControl","sx","width","FormLabel","defaultValue","render","field","TextField","Boolean","helperText","message","multiline","rows","StyledLink","MODAL_CREATE_PROJECT_NAME","selectors","modalStateSelector","dispatch","useDispatch","useEffect","projectsListFetch","columns","headerName","renderCell","params","row","_id","value","handleCreateProjectModalToogle","modalOpenToggleAction","LinearProgress","mt","Box","display","alignItems","justifyContent","mb","startIcon","Add","height","DataGrid","disableColumnMenu","components","LoadingOverlay","getRowId","projectCreateFetch","modal"],"sourceRoot":""}