{"version":3,"file":"static/js/737.274dc430.chunk.js","mappings":"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","sources":["components/ErrorBoundary/ErrorBoundary.tsx","components/ErrorMessage/styled.ts","components/ErrorMessage/ErrorMessage.tsx","components/Modal/styled.ts","components/Modal/Modal.tsx","types/index.ts","pages/Board/components/TaskCard/styled.ts","pages/Board/selectors/board.ts","pages/Board/components/TaskCard/TaskCard.tsx","pages/Board/components/TaskListCard/styled.ts","pages/Board/components/TaskListCard/TaskListCard.tsx","pages/Board/constants.ts","pages/Board/components/SortingBar/styled.ts","pages/Board/components/SortingBar/SortingBar.tsx","pages/Board/components/TaskForm/styled.ts","pages/Board/components/TaskForm/validation.ts","pages/Board/components/TaskForm/TaskForm.tsx","pages/Board/components/CreateTaskModal/CreateTaskModal.tsx","pages/Board/components/UpdateTaskModal/UpdateTaskModal.tsx","pages/Board/components/DeleteTaskModal/styled.ts","pages/Board/components/DeleteTaskModal/DeleteTaskModal.tsx","pages/Board/components/DeleteStatusModal/styled.ts","pages/Board/components/DeleteStatusModal/DeleteStatusModal.tsx","pages/Board/components/CreateStatusModal/CreateStatusModal.tsx","pages/Board/components/OpenTaskModal/OpenTaskModal.tsx","pages/Board/styled.ts","pages/Board/Board.tsx","store/modal/selectors/modal.ts"],"sourcesContent":["import { Component, ReactNode } from \"react\";\nimport { ErrorMessage } from \"../ErrorMessage\";\n\ntype TProps = {\n  children?: ReactNode;\n}\ntype  TState = {\n  error: boolean;\n}\n\n\nexport class ErrorBoundary extends Component<TProps, TState> {\n  state = {\n    error: false,\n  };\n\n  componentDidCatch(error: Error) {\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n    return this.props.children;\n  }\n}\n","import { styled } from \"@mui/material\";\nimport { Container } from \"@mui/system\";\n\nexport const StyledContainer = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n","import { Button } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport error from \"../../assets/img/error.gif\";\nimport { StyledContainer } from \"./styled\";\n\nexport const ErrorMessage = () => {\n  return (\n    <StyledContainer>\n      <img src={error} alt=\"error\" />\n      <Button component={Link} variant=\"contained\" to=\"/\">\n        Back to Main\n      </Button>\n    </StyledContainer>\n  );\n};\n","import { DialogContent, IconButton, styled, Typography } from \"@mui/material\";\n\nexport const StyledDialogContent = styled(DialogContent)`\n  padding-top: 20px;\n`;\n\nexport const StyledIconButton = styled(IconButton)`\n  position: absolute;\n  right: 8px;\n  top: 10px;\n  color: \"#9E9E9E\";\n`;\n\nexport const StyledTypography = styled(Typography)`\n  min-width: 550px;\n  padding: 16px;\n`;\n","import { ReactNode, MouseEventHandler } from \"react\";\nimport React from \"react\";\n\nimport { Dialog, DialogActions } from \"@mui/material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Slide from \"@mui/material/Slide\";\nimport { TransitionProps } from \"@mui/material/transitions\";\nimport {\n  StyledDialogContent,\n  StyledIconButton,\n  StyledTypography,\n} from \"./styled\";\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & {\n    children: React.ReactElement<any, any>;\n  },\n  ref: React.Ref<unknown>\n) {\n  return <Slide ref={ref} {...props} />;\n});\n\ntype ModalProps = {\n  title: string;\n  info?: boolean;\n  children?: ReactNode;\n  formName?: string;\n  loading?: boolean;\n  onClose: Function;\n  onConfirm?: () => void;\n};\n\nexport const Modal: React.FC<ModalProps> = (props) => {\n  const { title, children, onClose, formName, onConfirm, loading, info } =\n    props;\n  const color = formName ? \"primary\" : \"error\";\n\n  return (\n    <Dialog\n      keepMounted\n      TransitionComponent={Transition}\n      maxWidth=\"md\"\n      open={true}\n    >\n      {info ? (\n        <StyledTypography variant=\"h6\">{title}</StyledTypography>\n      ) : (\n        <StyledTypography variant=\"h6\">{title}</StyledTypography>\n      )}\n\n      <StyledIconButton\n        aria-label=\"close\"\n        onClick={onClose as MouseEventHandler}\n      >\n        <CloseIcon />\n      </StyledIconButton>\n\n      <StyledDialogContent dividers>{children}</StyledDialogContent>\n      {!info && (\n        <DialogActions>\n          <LoadingButton\n            disabled={loading}\n            size=\"small\"\n            variant=\"outlined\"\n            onClick={onClose as MouseEventHandler}\n          >\n            Cancel\n          </LoadingButton>\n          <LoadingButton\n            type=\"submit\"\n            color={color}\n            disabled={loading}\n            form={formName}\n            size=\"small\"\n            onClick={onConfirm as MouseEventHandler}\n            variant=\"contained\"\n          >\n            Confirm\n          </LoadingButton>\n        </DialogActions>\n      )}\n    </Dialog>\n  );\n};\n","export type Task = {\n  _id: string;\n  title: string;\n  description?: string;\n  key: string;\n  statusId: string;\n  priority: string;\n  projectId: string;\n  state: string;\n  createdAt: string;\n  updatedAt: string;\n  assignee: User[] | [];\n};\n\nexport type Status = {\n  _id: string;\n  key: string;\n  displayName: string;\n};\n\nexport type SortedTask = {\n  _id: string;\n  records: Task[];\n  count: number;\n};\n\nexport type Modal = {\n  open?: boolean;\n  name?: string | null;\n};\n\nexport type Params = {\n  status?: string;\n  priority?: string;\n  search?: string;\n  assignee?: User[];\n  userData?: User[];\n  projectId?: string;\n};\n\nexport type User = {\n  _id?: string;\n  firstName: string;\n  lastName: string;\n  email: string;\n  color: string;\n  password: string;\n  token?: string;\n};\n\nexport type CreateThunkType = {\n  data: Partial<Task>;\n  params: Partial<Params>;\n};\n\nexport type Project = {\n  _id: string;\n  name: string;\n  description: string;\n  shortName: string;\n};\n\nexport enum ItemTypes {\n  CARD = \"CARD\",\n}\n","import {\n  Avatar,\n  AvatarGroup,\n  Box,\n  Card,\n  CardActionArea,\n  CardContent,\n  CardHeader,\n  Typography,\n} from \"@mui/material\";\nimport { styled } from \"@mui/system\";\n\nexport const StyledCard = styled(Card)((props) => ({\n  width: 220,\n  marginBottom: 10,\n  borderLeft: \"5px solid\",\n  opacity: props.draggable ? \"0.2\" : \"1\",\n  cursor: \"move\",\n}));\n\nexport const StyledCardHeader = styled(CardHeader)`\n  padding: 8px;\n`;\n\nexport const StyledHeaderWrapper = styled(Box)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const StyledHeaderTypography = styled(Typography)`\n  padding: 1px 11px;\n  border-radius: 7px;\n  color: #fff;\n  font-weight: 300;\n  font-size: 12px;\n`;\n\nexport const StyledFooterWrapper = styled(Box)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: 10px;\n`;\n\nexport const StyledCardContent = styled(CardContent)`\n  padding: 8px;\n`;\n\nexport const StyledFooterTypography = styled(Typography)`\n  padding: 0px 7px;\n  border-radius: 5px;\n  font-size: 14px;\n  width: fit-content;\n`;\n\nexport const StyledAvatar = styled(Avatar)`\n  width: 24px;\n  height: 24px;\n  font-size: 0.8rem;\n`;\n\nexport const StyledAvatarGroup = styled(AvatarGroup)`\n  div:nth-of-type(1) {\n    width: 24px;\n    height: 24px;\n    font-size: 0.8rem;\n  }\n`;\n\nexport const StyledCardActionArea = styled(CardActionArea)`\n  &.MuiCardActionArea-focusHighlight {\n    background: transparent;\n  }\n  :focus-visible {\n    outline: none;\n  }\n  &.Mui-focusVisible {\n    box-shadow: none;\n  }\n`;\n","import { createSelector } from \"reselect\";\nimport { RootState } from \"../../../store\";\n\nconst boardStateSelector = (state: RootState) => state.board;\n\nexport const boardLoadingSelector = createSelector(\n  boardStateSelector,\n  (board) => board.loading\n);\n\nexport const boardErrorSelector = createSelector(\n  boardStateSelector,\n  (board) => board.error\n);\n\nexport const boardDataSelector = createSelector(\n  boardStateSelector,\n  (board) => board.data\n);\n\nexport const boardStatusSelector = createSelector(\n  boardStateSelector,\n  (board) => board.status\n);\n\nexport const boardFilterParams = createSelector(\n  boardStateSelector,\n  (board) => board.params\n);\n\nexport const boardUsersSelector = createSelector(\n  boardStateSelector,\n  (board) => board.users\n);\n\nexport const boardCreateStateSelector = createSelector(\n  boardStateSelector,\n  (board) => board.createState\n);\n\nexport const boardUpdateStateSelector = createSelector(\n  boardStateSelector,\n  (board) => board.updateState\n);\n\nexport const boardDeleteStateSelector = createSelector(\n  boardStateSelector,\n  (board) => board.deleteState\n);\n\nexport const boardTaskItemSelector = createSelector(\n  boardStateSelector,\n  (board) => board.taskItemState\n);\n\nexport const boardProjectStateSelector = createSelector(\n  boardStateSelector,\n  (board) => board.projectState\n);\n","import { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { useDrag } from \"react-dnd\";\n\nimport {\n  Typography,\n  Box,\n  IconButton,\n  Avatar,\n  Popover,\n  Button,\n  Stack,\n  Tooltip,\n} from \"@mui/material\";\nimport MoreVertOutlinedIcon from \"@mui/icons-material/MoreVertOutlined\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\nimport FolderOpenIcon from \"@mui/icons-material/FolderOpen\";\n\nimport { Task, ItemTypes } from \"../../../../types\";\nimport {\n  StyledCard,\n  StyledCardHeader,\n  StyledFooterWrapper,\n  StyledHeaderTypography,\n  StyledHeaderWrapper,\n  StyledCardContent,\n  StyledFooterTypography,\n  StyledAvatar,\n  StyledAvatarGroup,\n  StyledCardActionArea,\n} from \"./styled\";\nimport { boardProjectStateSelector } from \"../../selectors/board\";\n\ntype TaskCardProps = {\n  data: Task;\n  onEdit: (id: string) => void;\n  onDelete: (data: Task) => void;\n  onOpen: (id: string) => void;\n};\n\nexport const TaskCard: React.FC<TaskCardProps> = (props) => {\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n\n  const { data, onEdit, onDelete, onOpen } = props;\n\n  const [{ isDragging }, drag] = useDrag({\n    type: ItemTypes.CARD,\n    item: {\n      _id: data._id,\n    },\n\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const { projectData } = useSelector(boardProjectStateSelector);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? \"simple-popover\" : undefined;\n  return (\n    <StyledCard\n      draggable={isDragging}\n      ref={drag}\n      sx={{ borderColor: `priority.${data.priority}` }}\n    >\n      <StyledCardHeader\n        title={\n          <StyledHeaderWrapper>\n            <StyledHeaderTypography sx={{ bgcolor: \"primary.light\" }}>\n              {`${projectData?.shortName}-${data.key}`}\n            </StyledHeaderTypography>\n          </StyledHeaderWrapper>\n        }\n        action={\n          <Box>\n            <IconButton aria-describedby={id} onClick={handleClick}>\n              <MoreVertOutlinedIcon />\n            </IconButton>\n            <Popover\n              open={open}\n              id={id}\n              anchorEl={anchorEl}\n              onClose={handleClose}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"left\",\n              }}\n            >\n              <Stack>\n                <Button\n                  size=\"small\"\n                  startIcon={<FolderOpenIcon fontSize=\"inherit\" />}\n                  color=\"info\"\n                  onClick={() => {\n                    onOpen(data._id);\n                    handleClose();\n                  }}\n                >\n                  Open\n                </Button>\n                <Button\n                  size=\"small\"\n                  onClick={() => {\n                    onEdit(data._id);\n                    handleClose();\n                  }}\n                  startIcon={<EditIcon fontSize=\"inherit\" />}\n                >\n                  Edit\n                </Button>\n                <Button\n                  size=\"small\"\n                  onClick={() => {\n                    onDelete(data);\n                    handleClose();\n                  }}\n                  startIcon={<DeleteForeverIcon fontSize=\"inherit\" />}\n                  color=\"error\"\n                >\n                  Delete\n                </Button>\n              </Stack>\n            </Popover>\n          </Box>\n        }\n      ></StyledCardHeader>\n      <StyledCardActionArea onClick={() => onEdit(data._id)}>\n        <StyledCardContent>\n          <Typography\n            sx={{ fontWeight: 300, fontSize: 14, wordBreak: \"break-word\" }}\n          >\n            {data.title}\n          </Typography>\n          <StyledFooterWrapper>\n            <StyledFooterTypography\n              sx={{ bgcolor: `priority.${data.priority}` }}\n            >\n              {data.priority}\n            </StyledFooterTypography>\n            <StyledAvatarGroup max={3}>\n              {data.assignee.length === 0 && (\n                <Tooltip arrow title=\"No assignee\">\n                  <Avatar sx={{ width: 24, height: 24 }}></Avatar>\n                </Tooltip>\n              )}\n              {data.assignee.map((user) => {\n                return (\n                  <Tooltip\n                    key={user._id}\n                    arrow\n                    title={`${user.firstName} ${user.lastName}`}\n                  >\n                    <StyledAvatar\n                      key={user._id}\n                      sx={{ bgcolor: user.color }}\n                    >{`${user.firstName.charAt(0).toUpperCase()}${user.lastName\n                      .charAt(0)\n                      .toUpperCase()}`}</StyledAvatar>\n                  </Tooltip>\n                );\n              })}\n            </StyledAvatarGroup>\n          </StyledFooterWrapper>\n        </StyledCardContent>\n      </StyledCardActionArea>\n    </StyledCard>\n  );\n};\n","import { Card, IconButton, Typography } from \"@mui/material\";\nimport { styled } from \"@mui/system\";\n\nexport const StyledCard = styled(Card)((props) => ({\n  minWidth: 265,\n  width: \"fit-content\",\n  marginTop: 10,\n  marginRight: 10,\n  padding: 0,\n  minHeight: \"calc(74vh - 100px)\",\n  backgroundColor: props.draggable ? \"#C5CAE9\" : \"#e8eaf6\",\n}));\n\nexport const StyledIconButton = styled(IconButton)`\n  position: absolute;\n  top: 2px;\n  right: 5px;\n`;\n\nexport const StyledHeader = styled(Typography)`\n  border-radius: 5px;\n  text-align: center;\n  z-index: 200;\n  height: 20px;\n  width: 255px;\n  padding: 8px 6px 10px 6px;\n  position: -webkit-sticky;\n  position: sticky;\n  top: 0;\n  background-color: #e8eaf6;\n`;\n","import React, { useState } from \"react\";\nimport { ItemTypes, Status, Task } from \"../../../../types\";\nimport { TaskCard } from \"../TaskCard\";\nimport { StyledCard, StyledHeader, StyledIconButton } from \"./styled\";\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\nimport { Box, Collapse, CardContent } from \"@mui/material\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { boardUpdateTaskDrag } from \"../../thunk/board\";\nimport {\n  boardDataSelector,\n  boardFilterParams,\n  boardProjectStateSelector,\n} from \"../../selectors/board\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport { useDrop } from \"react-dnd\";\nimport { AppDispatch } from \"../../../../store\";\n\ntype TaskListCardProps = {\n  status: Status;\n  onEdit: (id: string) => void;\n  onDelete: (data: Task) => void;\n  onStatusDelete: (data: Status) => void;\n  onOpen: (id: string) => void;\n};\n\nexport const TaskListCard: React.FC<TaskListCardProps> = (props) => {\n  const { status, onEdit, onDelete, onStatusDelete, onOpen } = props;\n\n  const taskList = useSelector(boardDataSelector);\n  const { loading } = useSelector(boardProjectStateSelector);\n  const params = useSelector(boardFilterParams);\n\n  const [show, setShow] = useState(false);\n  const dispatch: AppDispatch = useDispatch();\n\n  const [{ isOver }, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    drop: (item: Partial<Task>, monitor) => {\n      const data = { _id: item?._id, statusId: status.key };\n\n      dispatch(boardUpdateTaskDrag({ data, params }));\n    },\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n    }),\n  });\n\n  const taskCounter = () => {\n    if (\n      taskList.some(\n        (task) => task.statusId.toLowerCase() === status.key.toLowerCase()\n      )\n    ) {\n      return taskList.filter(\n        (task) => task.statusId.toLowerCase() === status.key.toLowerCase()\n      ).length;\n    }\n    return 0;\n  };\n\n  return (\n    <>\n      {!loading && (\n        <Box>\n          <StyledHeader\n            onMouseOver={() => setShow(true)}\n            onMouseOut={() => setShow(false)}\n            onClick={() => setShow(false)}\n          >\n            {status.displayName} ({taskCounter()})\n            {show && (\n              <StyledIconButton\n                onClick={() => onStatusDelete(status)}\n                size=\"small\"\n              >\n                <DeleteForeverIcon />\n              </StyledIconButton>\n            )}\n          </StyledHeader>\n          <StyledCard draggable={isOver} ref={drop}>\n            <CardContent>\n              <TransitionGroup>\n                {taskList.map((task) => {\n                  if (\n                    task.statusId.toLowerCase() ===\n                    status.displayName.toLowerCase()\n                  ) {\n                    return (\n                      <Collapse key={task._id}>\n                        <TaskCard\n                          key={task._id}\n                          data={task}\n                          onEdit={onEdit}\n                          onDelete={onDelete}\n                          onOpen={onOpen}\n                        />\n                      </Collapse>\n                    );\n                  }\n                })}\n              </TransitionGroup>\n            </CardContent>\n          </StyledCard>\n        </Box>\n      )}\n    </>\n  );\n};\n","export const MODAL_CREATE_NAME = \"MODAL_CREATE_NAME\";\nexport const MODAL_UPDATE_NAME = \"MODAL_UPDATE_NAME\";\nexport const MODAL_DELETE_NAME = \"MODAL_DELETE_NAME\";\nexport const MODAL_STATUS_DELETE_NAME = \"MODAL_STATUS_DELETE_NAME\";\nexport const MODAL_STATUS_CREATE_NAME = \"MODAL_STATUS_CREATE_NAME\";\nexport const MODAL_OPEN_TASK_NAME = \"MODAL_OPEN_TASK_NAME\";\n\nexport const priorityList = [\"Low\", \"Normal\", \"High\", \"Critical\"];\n","import { Button, FormControl, styled } from \"@mui/material\";\n\nexport const StyledButton = styled(Button)`\n  max-height: 40px;\n`;\n\nexport const StyledFormControl = styled(FormControl)`\n  min-width: 150px;\n`;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { boardFilterParams, boardUsersSelector } from \"../../selectors/board\";\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport FilterAltOffIcon from \"@mui/icons-material/FilterAltOff\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport {\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Stack,\n  Autocomplete,\n} from \"@mui/material\";\n\nimport { priorityList } from \"../../constants\";\nimport { Params, Status, User } from \"../../../../types\";\nimport { StyledButton, StyledFormControl } from \"./styled\";\n\ntype SortingBarProps = {\n  data: Status[];\n  onFilter: (params: Params) => void;\n  onReset: () => void;\n  onCreateModalOpen: () => void;\n};\n\nexport const SortingBar: React.FC<SortingBarProps> = (props) => {\n  const { data, onFilter, onCreateModalOpen, onReset } = props;\n  const { loading, userList } = useSelector(boardUsersSelector);\n  const params = useSelector(boardFilterParams);\n\n  const handleAssigneeChange = (data: User[]) => {\n    const assignee: User[] = [];\n    data.forEach((user) => {\n      assignee.push(user);\n    });\n    onFilter({ assignee });\n    onFilter({ userData: data });\n  };\n\n  return (\n    <Stack\n      direction={{ xs: \"column\", sm: \"column\", md: \"column\", lg: \"row\" }}\n      spacing={2}\n      sx={{ pt: 2, pl: 1 }}\n    >\n      <StyledButton\n        sx={{\n          minWidth: { xs: \"100%\", lg: 120 },\n        }}\n        onClick={onCreateModalOpen}\n        variant=\"contained\"\n        size=\"small\"\n        startIcon={<AddIcon />}\n        disabled={!data.length}\n      >\n        Add issue\n      </StyledButton>\n      <TextField\n        size=\"small\"\n        onChange={(event) => onFilter({ search: event.target.value })}\n        placeholder=\"Search this board\"\n        variant=\"outlined\"\n        value={params.search}\n        disabled={!data.length}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n      ></TextField>\n      <StyledFormControl size=\"small\">\n        <InputLabel id=\"status-select-label\">Status</InputLabel>\n        <Select\n          labelId=\"status-select-label\"\n          id=\"status-select\"\n          label=\"Status\"\n          disabled={!data.length}\n          value={params.status}\n          onChange={(event) => onFilter({ status: event.target.value })}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {data.map((status) => {\n            return (\n              <MenuItem key={status._id} value={status.key}>\n                {status.displayName}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </StyledFormControl>\n      <StyledFormControl size=\"small\">\n        <InputLabel id=\"priority-select-label\">Priority</InputLabel>\n        <Select\n          labelId=\"priority-select-label\"\n          id=\"priority-select\"\n          value={params.priority}\n          label=\"Priority\"\n          disabled={!data.length}\n          onChange={(event) => onFilter({ priority: event.target.value })}\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {priorityList.map((priority, index) => {\n            return (\n              <MenuItem key={index} value={priority.toLowerCase()}>\n                {priority}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </StyledFormControl>\n      <StyledFormControl size=\"small\">\n        <Autocomplete\n          sx={{\n            maxWidth: { xs: 450 },\n            minWidth: { xs: \"100%\", lg: 350 },\n          }}\n          size=\"small\"\n          multiple\n          loading={loading}\n          id=\"users\"\n          disabled={!data.length}\n          options={userList}\n          filterSelectedOptions\n          disableCloseOnSelect\n          value={params.userData}\n          onChange={(_, data) => handleAssigneeChange(data)}\n          getOptionLabel={(option) => `${option.firstName} ${option.lastName}`}\n          renderInput={(params) => (\n            <TextField {...params} label=\"Assignee\" placeholder=\"User\" />\n          )}\n        ></Autocomplete>\n      </StyledFormControl>\n      <StyledButton\n        sx={{\n          minWidth: { xs: \"100%\", lg: 120 },\n        }}\n        size=\"small\"\n        variant=\"outlined\"\n        disabled={!data.length}\n        onClick={onReset}\n        startIcon={<FilterAltOffIcon />}\n      >\n        Clear All\n      </StyledButton>\n    </Stack>\n  );\n};\n","import { styled } from \"@mui/system\";\n\nexport const StyledForm = styled(\"form\")`\n  display: flex;\n  flex-direction: column;\n`;\n","import * as yup from \"yup\";\n\nconst assigneeTaskSchema = yup.object().shape({\n  firstName: yup.string(),\n  lastName: yup.string(),\n  email: yup.string(),\n  _id: yup.string(),\n  updatedAt: yup.string(),\n  createdAt: yup.string(),\n  __v: yup.number(),\n});\n\nexport const createTaskSchema = yup.object().shape({\n  title: yup\n    .string()\n    .required(\"Required\")\n    .min(3, \"Min length is 2 symbols\")\n    .max(255, \"Max length is 255 symbols\"),\n  description: yup.string(),\n  statusId: yup.string().required(\"Required\"),\n  priority: yup.string().required(\"Required\"),\n  assignee: yup.array().of(assigneeTaskSchema),\n});\n","import React, { ReactNode } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport {\n  Autocomplete,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  InputLabel,\n  MenuItem,\n  Select,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport { StyledForm } from \"./styled\";\nimport { Status, Task } from \"../../../../types\";\nimport { useSelector } from \"react-redux\";\nimport { boardUsersSelector } from \"../../selectors/board\";\nimport { createTaskSchema } from \"./validation\";\nimport { priorityList } from \"../../constants\";\n\ntype TaskFormProp = {\n  statusList: Status[];\n  name: string;\n  onConfirm: (values: Partial<Task>) => void;\n  taskData?: Partial<Task>;\n  loading: boolean;\n};\n\nexport const TaskForm: React.FC<TaskFormProp> = (props) => {\n  const { statusList, name, onConfirm, taskData, loading } = props;\n  const { userList } = useSelector(boardUsersSelector);\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(createTaskSchema),\n  });\n\n  const filteredList = () => {\n    if (taskData?.assignee?.length) {\n      const assignee = [...taskData.assignee];\n      return userList.filter((item) => {\n        return assignee.every((filter) => {\n          return filter._id !== item._id;\n        });\n      });\n    }\n    return userList;\n  };\n  const assigneeList = filteredList();\n\n  const onSubmit = async (values: Partial<Task>) => {\n    try {\n      if (!taskData) {\n        onConfirm(values);\n      } else {\n        onConfirm({ ...values, _id: taskData._id });\n      }\n    } catch (error) {}\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit(onSubmit)} id={name}>\n      <FormControl required error={Boolean(errors.title)}>\n        <FormLabel>Task Title</FormLabel>\n        <Controller\n          name=\"title\"\n          control={control}\n          defaultValue={taskData?.title || \"\"}\n          render={({ field }) => (\n            <TextField\n              error={Boolean(errors.title)}\n              disabled={loading}\n              helperText={errors.title?.message as ReactNode}\n              size=\"small\"\n              {...field}\n            />\n          )}\n        />\n      </FormControl>\n\n      <FormControl>\n        <FormLabel>Task Description</FormLabel>\n        <Controller\n          name=\"description\"\n          control={control}\n          defaultValue={taskData?.description || \"\"}\n          render={({ field }) => (\n            <TextField\n              multiline={true}\n              rows={5}\n              disabled={loading}\n              error={Boolean(errors.description)}\n              helperText={errors.description?.message as ReactNode}\n              {...field}\n            />\n          )}\n        />\n      </FormControl>\n\n      <Stack direction=\"row\" spacing={2} sx={{ pt: 1 }}>\n        <FormControl\n          error={Boolean(errors.statusId)}\n          size=\"small\"\n          sx={{ minWidth: 120 }}\n        >\n          <InputLabel id=\"status\">Status</InputLabel>\n          <Controller\n            name=\"statusId\"\n            control={control}\n            defaultValue={taskData?.statusId || \"\"}\n            render={({ field }) => (\n              <Select\n                {...field}\n                labelId=\"status\"\n                id=\"status-select\"\n                disabled={loading}\n                label=\"Status\"\n              >\n                {statusList.map((status) => {\n                  return (\n                    <MenuItem key={status.key} value={status.key}>\n                      {status.displayName}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            )}\n          />\n          <FormHelperText>\n            {errors.statusId?.message as ReactNode}\n          </FormHelperText>\n        </FormControl>\n        <FormControl\n          error={Boolean(errors.priority)}\n          size=\"small\"\n          sx={{ minWidth: 120 }}\n        >\n          <InputLabel id=\"priority-select-label\">Priority</InputLabel>\n          <Controller\n            name=\"priority\"\n            control={control}\n            render={({ field }) => (\n              <Select\n                {...field}\n                disabled={loading}\n                labelId=\"priority-select-label\"\n                id=\"priority-select\"\n                label=\"Priority\"\n              >\n                {priorityList.map((priority) => {\n                  return (\n                    <MenuItem key={priority} value={priority.toLowerCase()}>\n                      {priority}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            )}\n            defaultValue={taskData?.priority || \"\"}\n          />\n          <FormHelperText>\n            {errors.priority?.message as ReactNode}\n          </FormHelperText>\n        </FormControl>\n        {errors.status && (\n          <Typography>{errors.status.message as ReactNode}</Typography>\n        )}\n      </Stack>\n      <FormControl>\n        <Controller\n          name=\"assignee\"\n          control={control}\n          defaultValue={taskData?.assignee}\n          render={({ field: { onChange, value } }) => (\n            <Autocomplete\n              sx={{ maxWidth: 535, mt: 1 }}\n              size=\"small\"\n              multiple\n              id=\"users\"\n              value={value}\n              options={assigneeList}\n              disabled={loading}\n              filterSelectedOptions\n              disableCloseOnSelect\n              getOptionLabel={(option) =>\n                `${option.firstName} ${option.lastName}`\n              }\n              renderInput={(params) => (\n                <TextField {...params} label=\"Assignee\" placeholder=\"User\" />\n              )}\n              onChange={(_, data) => {\n                onChange(data);\n                return data;\n              }}\n            ></Autocomplete>\n          )}\n        />\n      </FormControl>\n    </StyledForm>\n  );\n};\n","import { useSelector } from \"react-redux\";\nimport { Modal } from \"../../../../components/Modal\";\nimport { Task } from \"../../../../types\";\nimport {\n  boardCreateStateSelector,\n  boardStatusSelector,\n} from \"../../selectors/board\";\nimport { TaskForm } from \"../TaskForm\";\n\ntype CreateTaskModalProps = {\n  onClose: () => void;\n  onConfirm: (values: Partial<Task>) => void;\n};\n\nexport const CreateTaskModal: React.FC<CreateTaskModalProps> = (props) => {\n  const { onClose, onConfirm } = props;\n  const { data } = useSelector(boardStatusSelector);\n  const { loading } = useSelector(boardCreateStateSelector);\n  return (\n    <Modal\n      formName=\"create\"\n      onClose={onClose}\n      title=\"Create Task\"\n      loading={loading}\n    >\n      <TaskForm\n        loading={loading}\n        statusList={data}\n        name=\"create\"\n        onConfirm={onConfirm}\n      />\n    </Modal>\n  );\n};\n","import { LinearProgress } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Modal } from \"../../../../components/Modal\";\nimport { AppDispatch } from \"../../../../store\";\nimport { Task } from \"../../../../types\";\nimport {\n  boardStatusSelector,\n  boardUpdateStateSelector,\n} from \"../../selectors/board\";\nimport { boardItemUpdateDataFetch } from \"../../thunk/board\";\nimport { TaskForm } from \"../TaskForm\";\n\ntype UpdateTaskModalProps = {\n  onClose: (id: string) => void;\n  onConfirm: (values: Partial<Task>) => void;\n};\n\nexport const UpdateTaskModal: React.FC<UpdateTaskModalProps> = ({\n  onClose,\n  onConfirm,\n}) => {\n  const { data } = useSelector(boardStatusSelector);\n  const { fetchData, taskData, loading } = useSelector(\n    boardUpdateStateSelector\n  );\n  const dispatch: AppDispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(boardItemUpdateDataFetch(fetchData));\n  }, [dispatch, fetchData]);\n\n  return (\n    <Modal\n      onClose={onClose}\n      formName=\"update\"\n      loading={loading}\n      title=\"Update Task\"\n    >\n      {loading && <LinearProgress />}\n      {!loading && (\n        <TaskForm\n          loading={loading}\n          statusList={data}\n          name=\"update\"\n          onConfirm={onConfirm}\n          taskData={taskData}\n        />\n      )}\n    </Modal>\n  );\n};\n","import { Typography } from \"@mui/material\";\nimport { styled } from \"@mui/system\";\n\nexport const StyledTypography = styled(Typography)`\n  font-weight: 400;\n`;\n","import { Typography } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport { Modal } from \"../../../../components/Modal\";\nimport { Task } from \"../../../../types\";\nimport { boardDeleteStateSelector } from \"../../selectors/board\";\nimport { StyledTypography } from \"./styled\";\n\ntype DeleteTaskModalProps = {\n  onClose: (data: Task) => void;\n  onConfirm: (data: Task) => void;\n};\n\nexport const DeleteTaskModal: React.FC<DeleteTaskModalProps> = ({\n  onClose,\n  onConfirm,\n}) => {\n  const { loading, taskData } = useSelector(boardDeleteStateSelector);\n  return (\n    <Modal\n      onClose={onClose}\n      onConfirm={() => onConfirm(taskData!)}\n      title=\"Delete Task\"\n      loading={loading}\n    >\n      <StyledTypography variant=\"h6\">\n        Are you sure you want to delete{\" \"}\n        {\n          <StyledTypography variant=\"h6\" display=\"inline\" color=\"primary.main\">\n            {taskData?.title}\n          </StyledTypography>\n        }{\" \"}\n        task ?\n      </StyledTypography>\n      <Typography>\n        The item will be deleted immediately. You can not undo this action.\n      </Typography>\n    </Modal>\n  );\n};\n","import { Typography } from \"@mui/material\";\nimport { styled } from \"@mui/system\";\n\nexport const StyledTypography = styled(Typography)`\n  font-weight: 400;\n`;\n","import { Typography } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport { Modal } from \"../../../../components/Modal\";\nimport { Status } from \"../../../../types\";\nimport { boardDeleteStateSelector } from \"../../selectors/board\";\nimport { StyledTypography } from \"./styled\";\n\ntype DeleteTaskModalProps = {\n  onClose: () => void;\n  onConfirm: (data: Status) => void;\n};\n\nexport const DeleteStatusModal: React.FC<DeleteTaskModalProps> = ({\n  onClose,\n  onConfirm,\n}) => {\n  const { statusData } = useSelector(boardDeleteStateSelector);\n\n  return (\n    <Modal\n      title=\"Delete Status\"\n      onClose={onClose}\n      onConfirm={() => onConfirm(statusData!)}\n    >\n      <StyledTypography variant=\"h6\">\n        Are you sure you want to delete{\" \"}\n        {\n          <StyledTypography variant=\"h6\" display=\"inline\" color=\"primary.main\">\n            {statusData?.displayName}\n          </StyledTypography>\n        }{\" \"}\n        status ?\n      </StyledTypography>\n      <Typography>\n        The item will be deleted immediately. You can not undo this action.\n      </Typography>\n    </Modal>\n  );\n};\n","import { Modal } from \"../../../../components/Modal\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { FormControl, FormLabel, TextField } from \"@mui/material\";\nimport { ReactNode } from \"react\";\nimport { Status } from \"../../../../types\";\nimport { useSelector } from \"react-redux\";\nimport { boardStatusSelector } from \"../../selectors/board\";\n\ntype CreateStatusModalProps = {\n  onClose: () => void;\n  onConfirm: (data: Partial<Status>) => void;\n};\n\nexport const CreateStatusModal: React.FC<CreateStatusModalProps> = ({\n  onClose,\n  onConfirm,\n}) => {\n  const { loading } = useSelector(boardStatusSelector);\n\n  const createStatusSchema = yup.object().shape({\n    key: yup\n      .string()\n      .min(2, \"Min length is 2 symbols\")\n      .max(25, \"Max length is 25 symbols\")\n      .required(\"Required\"),\n  });\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(createStatusSchema),\n  });\n  const onSubmit = async (values: Partial<Status>) => {\n    try {\n      onConfirm(values);\n    } catch (error) {}\n  };\n  return (\n    <Modal\n      loading={loading}\n      onClose={onClose}\n      title=\"Create Status\"\n      formName=\"status\"\n    >\n      <form onSubmit={handleSubmit(onSubmit)} id=\"status\">\n        <FormControl required sx={{ width: \"100%\" }}>\n          <FormLabel>Status Title</FormLabel>\n          <Controller\n            name=\"key\"\n            control={control}\n            defaultValue=\"\"\n            render={({ field }) => (\n              <TextField\n                error={Boolean(errors.key)}\n                helperText={errors.key?.message as ReactNode}\n                size=\"small\"\n                {...field}\n              />\n            )}\n          />\n        </FormControl>\n      </form>\n    </Modal>\n  );\n};\n","import { Box, Stack, Tooltip, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport {\n  boardProjectStateSelector,\n  boardTaskItemSelector,\n} from \"../../selectors/board\";\nimport { AppDispatch } from \"../../../../store\";\nimport { boardItemOpenDataFetch } from \"../../thunk/board\";\nimport { Modal } from \"../../../../components/Modal\";\nimport NoiseControlOffIcon from \"@mui/icons-material/NoiseControlOff\";\n\ntype OpenTaskModalProps = {\n  onClose: () => void;\n};\nexport const OpenTaskModal: React.FC<OpenTaskModalProps> = ({ onClose }) => {\n  const { taskData, fetchData } = useSelector(boardTaskItemSelector);\n\n  const { projectData } = useSelector(boardProjectStateSelector);\n\n  const dispatch: AppDispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(boardItemOpenDataFetch(fetchData));\n  }, [dispatch, fetchData]);\n  return (\n    <Modal\n      info={true}\n      onClose={onClose}\n      title={`${projectData?.shortName} - ${taskData?.key}`}\n    >\n      <Box sx={{ display: \"flex\" }}>\n        <Stack spacing={2} sx={{ maxWidth: 550 }}>\n          <Typography variant=\"h6\" color=\"primary.main\">\n            {taskData?.title}\n          </Typography>\n          <Stack direction=\"row\" spacing={2}>\n            <Box>\n              <Typography color=\"primary.light\" variant=\"overline\">\n                Description\n              </Typography>\n              {taskData?.description && (\n                <Typography\n                  minWidth={300}\n                  sx={{ wordBreak: \"break-all\" }}\n                  variant=\"subtitle1\"\n                >\n                  {taskData?.description}\n                </Typography>\n              )}\n              {!taskData?.description && (\n                <Typography\n                  minWidth={300}\n                  color=\"secondary.dark\"\n                  variant=\"subtitle1\"\n                >\n                  No description\n                </Typography>\n              )}\n            </Box>\n            <Stack minWidth={200}>\n              <Stack direction=\"row\" spacing={2}>\n                <Typography\n                  minWidth={50}\n                  color=\"primary.light\"\n                  variant=\"overline\"\n                >\n                  Project:\n                </Typography>\n                <Stack direction=\"row\" sx={{ alignItems: \"center\" }}>\n                  <Typography color=\"secondary.dark\" variant=\"subtitle1\">\n                    {projectData?.name}\n                  </Typography>\n                </Stack>\n              </Stack>\n              <Stack direction=\"row\" spacing={2}>\n                <Typography\n                  minWidth={50}\n                  color=\"primary.light\"\n                  variant=\"overline\"\n                >\n                  Assignee:\n                </Typography>\n                {taskData?.assignee.length === 0 && (\n                  <Typography color=\"secondary.dark\" variant=\"subtitle1\">\n                    No assignee\n                  </Typography>\n                )}\n                <Stack>\n                  {taskData?.assignee.map((user) => {\n                    return (\n                      <Tooltip\n                        placement=\"right-end\"\n                        key={user._id}\n                        arrow\n                        title={user.email}\n                      >\n                        <Typography\n                          color=\"secondary.dark\"\n                          display=\"inline\"\n                        >{`${user.firstName} ${user.lastName}`}</Typography>\n                      </Tooltip>\n                    );\n                  })}\n                </Stack>\n              </Stack>\n              <Stack direction=\"row\" spacing={2}>\n                <Typography\n                  minWidth={50}\n                  color=\"primary.light\"\n                  variant=\"overline\"\n                >\n                  Priority:\n                </Typography>\n                <Stack direction=\"row\" sx={{ alignItems: \"center\" }}>\n                  <Typography color=\"secondary.dark\" variant=\"subtitle1\">\n                    {taskData?.priority}\n                  </Typography>\n                  <NoiseControlOffIcon\n                    sx={{ color: `priority.${taskData?.priority}` }}\n                  ></NoiseControlOffIcon>\n                </Stack>\n              </Stack>\n              <Stack direction=\"row\" spacing={2}>\n                <Typography\n                  minWidth={50}\n                  color=\"primary.light\"\n                  variant=\"overline\"\n                >\n                  Status:\n                </Typography>\n                <Typography color=\"secondary.dark\" variant=\"subtitle1\">\n                  {taskData?.statusId}\n                </Typography>\n              </Stack>\n            </Stack>\n          </Stack>\n        </Stack>\n      </Box>\n    </Modal>\n  );\n};\n","import { Box } from \"@mui/material\";\nimport { styled } from \"@mui/system\";\nimport { Link } from \"react-router-dom\";\n\nexport const StyledBoardWrapper = styled(Box)`\n  display: flex;\n  min-width: 95vw;\n  max-width: fit-content;\n  margin: 8px;\n  height: 74vh;\n  overflow: auto;\n  ::-webkit-scrollbar {\n    width: 7px;\n    height: 7px;\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: #7986cb78;\n    border-radius: 5px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: #5c6bc0;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useCallback, useEffect } from \"react\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport { useParams } from \"react-router-dom\";\n\nimport {\n  Box,\n  Button,\n  LinearProgress,\n  Container,\n  Collapse,\n  Typography,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { TaskListCard } from \"./components/TaskListCard\";\nimport { SortingBar } from \"./components/SortingBar\";\nimport {\n  boardStatusListFetch,\n  boardCreateStatusFetch,\n  boardCreateTaskFetch,\n  boardDeleteStatusFetch,\n  boardDeleteTaskFetch,\n  boardListFetch,\n  boardProjectDataFetch,\n  boardUpdateTaskFetch,\n  boardUserListFetch,\n} from \"./thunk/board\";\nimport { AppDispatch } from \"../../store\";\nimport * as selectors from \"./selectors/board\";\nimport { Params, Status, Task } from \"../../types\";\nimport {\n  boardDeleteItemDataSetAction,\n  boardDeleteStatusDataSetAction,\n  boardFilterParamsResetAction,\n  boardFilterParamsSetAction,\n  boardItemIdSetAction,\n  boardUpdateItemIdSetAction,\n} from \"./reducer/board\";\nimport { CreateTaskModal } from \"./components/CreateTaskModal\";\nimport {\n  MODAL_CREATE_NAME,\n  MODAL_UPDATE_NAME,\n  MODAL_DELETE_NAME,\n  MODAL_OPEN_TASK_NAME,\n  MODAL_STATUS_DELETE_NAME,\n  MODAL_STATUS_CREATE_NAME,\n} from \"./constants\";\nimport { modalOpenToggleAction } from \"../../store/modal/reducer/modal\";\nimport { modalStateSelector } from \"../../store/modal/selectors/modal\";\nimport { UpdateTaskModal } from \"./components/UpdateTaskModal\";\n\nimport { DeleteTaskModal } from \"./components/DeleteTaskModal\";\nimport { DeleteStatusModal } from \"./components/DeleteStatusModal\";\nimport { CreateStatusModal } from \"./components/CreateStatusModal\";\nimport { OpenTaskModal } from \"./components/OpenTaskModal\";\nimport { StyledBoardWrapper, StyledLink } from \"./styled\";\nimport { ErrorBoundary } from \"../../components/ErrorBoundary\";\nimport { ErrorMessage } from \"../../components/ErrorMessage\";\n\nconst Board = () => {\n  const { error, data } = useSelector(selectors.boardStatusSelector);\n  const params = useSelector(selectors.boardFilterParams);\n  const loading = useSelector(selectors.boardLoadingSelector);\n  const { open, name } = useSelector(modalStateSelector);\n  const { routeId } = useParams();\n  const { projectData } = useSelector(selectors.boardProjectStateSelector);\n\n  const dispatch: AppDispatch = useDispatch();\n\n  useEffect((): (() => void) => {\n    dispatch(boardProjectDataFetch({ id: routeId! }));\n    dispatch(boardFilterParamsSetAction({ projectId: routeId }));\n    dispatch(boardUserListFetch());\n    return () => dispatch(boardFilterParamsSetAction({ projectId: \"\" }));\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (params.projectId) {\n      dispatch(boardStatusListFetch(params));\n      dispatch(boardListFetch(params));\n    }\n  }, [params, dispatch]);\n\n  const handleFilter = (param: Partial<Params>) => {\n    dispatch(boardFilterParamsSetAction(param));\n  };\n\n  const handleFilterReset = () => {\n    dispatch(boardFilterParamsResetAction());\n  };\n\n  const handleCreateModalOpenToggle = () => {\n    dispatch(modalOpenToggleAction({ name: MODAL_CREATE_NAME }));\n  };\n\n  const handleUpdateModalOpen = useCallback((id: string) => {\n    dispatch(boardUpdateItemIdSetAction(id));\n    dispatch(modalOpenToggleAction({ name: MODAL_UPDATE_NAME }));\n    // eslint-disable-next-line\n  }, []);\n\n  const handleUpdateModalClose = useCallback(() => {\n    dispatch(modalOpenToggleAction({ name: MODAL_UPDATE_NAME }));\n    // eslint-disable-next-line\n  }, []);\n\n  const handleCreateTask = (values: Partial<Task>) => {\n    const data = { ...values, projectId: projectData?._id };\n    dispatch(boardCreateTaskFetch({ data, params }));\n  };\n\n  const handleUpdateTask = (data: Partial<Task>) => {\n    dispatch(boardUpdateTaskFetch({ data, params }));\n  };\n\n  const handleDeleteModalOpen = useCallback((data: Task) => {\n    dispatch(boardDeleteItemDataSetAction(data));\n    dispatch(modalOpenToggleAction({ name: MODAL_DELETE_NAME }));\n    // eslint-disable-next-line\n  }, []);\n\n  const handleDeleteModalClose = useCallback(() => {\n    dispatch(modalOpenToggleAction({ name: MODAL_DELETE_NAME }));\n    // eslint-disable-next-line\n  }, []);\n\n  const handleDeleteTask = (data: Task) => {\n    dispatch(boardDeleteTaskFetch({ data, params }));\n  };\n\n  const handleDeleteStatusModalOpen = useCallback((data: Status) => {\n    dispatch(boardDeleteStatusDataSetAction(data));\n    dispatch(modalOpenToggleAction({ name: MODAL_STATUS_DELETE_NAME }));\n    // eslint-disable-next-line\n  }, []);\n\n  const handleDeleteStatusModalClose = useCallback(() => {\n    dispatch(modalOpenToggleAction({ name: MODAL_STATUS_DELETE_NAME }));\n    // eslint-disable-next-line\n  }, []);\n\n  const handleDeleteStatus = (data: Status) => {\n    dispatch(boardDeleteStatusFetch({ data, params }));\n  };\n\n  const handleCreateStatusModalToogle = useCallback(() => {\n    dispatch(modalOpenToggleAction({ name: MODAL_STATUS_CREATE_NAME }));\n    // eslint-disable-next-line\n  }, []);\n\n  const handleCreateStatus = (values: Partial<Status>) => {\n    const data = { ...values, projectId: projectData?._id };\n\n    dispatch(boardCreateStatusFetch({ data, params }));\n  };\n\n  const handleOpenTaskModalOpen = useCallback((id: string) => {\n    dispatch(boardItemIdSetAction(id));\n    dispatch(modalOpenToggleAction({ name: MODAL_OPEN_TASK_NAME }));\n    // eslint-disable-next-line\n  }, []);\n\n  const handleOpenTaskModalClose = useCallback(() => {\n    dispatch(modalOpenToggleAction({ name: MODAL_OPEN_TASK_NAME }));\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <ErrorBoundary>\n      <>\n        {loading && !error && (\n          <Box sx={{ width: \"100%\" }}>\n            <LinearProgress />\n          </Box>\n        )}\n        {!error && (\n          <Container maxWidth=\"xl\">\n            <SortingBar\n              onFilter={handleFilter}\n              onReset={handleFilterReset}\n              data={data}\n              onCreateModalOpen={handleCreateModalOpenToggle}\n            />\n            <Box sx={{ m: 2 }}>\n              <Typography color=\"info.main\" variant=\"subtitle1\">\n                <StyledLink to=\"/projects\">Projects </StyledLink> /{\" \"}\n                {projectData?.name}\n              </Typography>\n            </Box>\n            <StyledBoardWrapper>\n              {!error && data.length > 0 && (\n                <TransitionGroup style={{ display: \"flex\" }}>\n                  {data.map((status) => {\n                    return (\n                      <Collapse key={status._id} orientation=\"horizontal\">\n                        <TaskListCard\n                          status={status}\n                          onEdit={handleUpdateModalOpen}\n                          onDelete={handleDeleteModalOpen}\n                          onOpen={handleOpenTaskModalOpen}\n                          onStatusDelete={handleDeleteStatusModalOpen}\n                        />\n                      </Collapse>\n                    );\n                  })}\n                </TransitionGroup>\n              )}\n              <Box sx={{ width: 220, ml: 1 }}>\n                <Button\n                  sx={{ width: 200, position: \"sticky\", top: 0 }}\n                  fullWidth={true}\n                  onClick={handleCreateStatusModalToogle}\n                  variant=\"outlined\"\n                  startIcon={<AddIcon />}\n                >\n                  Create status\n                </Button>\n              </Box>\n            </StyledBoardWrapper>\n          </Container>\n        )}\n        {open && name === MODAL_CREATE_NAME && (\n          <CreateTaskModal\n            onClose={handleCreateModalOpenToggle}\n            onConfirm={handleCreateTask}\n          />\n        )}\n        {open && name === MODAL_UPDATE_NAME && (\n          <UpdateTaskModal\n            onClose={handleUpdateModalClose}\n            onConfirm={handleUpdateTask}\n          />\n        )}\n        {open && name === MODAL_DELETE_NAME && (\n          <DeleteTaskModal\n            onClose={handleDeleteModalClose}\n            onConfirm={handleDeleteTask}\n          />\n        )}\n        {open && name === MODAL_STATUS_DELETE_NAME && (\n          <DeleteStatusModal\n            onClose={handleDeleteStatusModalClose}\n            onConfirm={handleDeleteStatus}\n          />\n        )}\n        {open && name === MODAL_STATUS_CREATE_NAME && (\n          <CreateStatusModal\n            onClose={handleCreateStatusModalToogle}\n            onConfirm={handleCreateStatus}\n          />\n        )}\n        {open && name === MODAL_OPEN_TASK_NAME && (\n          <OpenTaskModal onClose={handleOpenTaskModalClose} />\n        )}\n      </>\n      {error && !loading && <ErrorMessage />}\n    </ErrorBoundary>\n  );\n};\n\nexport default Board;\n","import { RootState } from \"../..\";\n\nexport const modalStateSelector = (state: RootState) => state.modal;\n"],"names":["ErrorBoundary","state","error","this","setState","ErrorMessage","props","children","Component","StyledContainer","styled","Container","src","alt","Button","component","Link","variant","to","StyledDialogContent","DialogContent","StyledIconButton","IconButton","StyledTypography","Typography","Transition","React","ref","Slide","Modal","title","onClose","formName","onConfirm","loading","info","color","Dialog","keepMounted","TransitionComponent","maxWidth","open","onClick","Close","dividers","DialogActions","LoadingButton","disabled","size","type","form","ItemTypes","StyledCard","Card","width","marginBottom","borderLeft","opacity","draggable","cursor","StyledCardHeader","CardHeader","StyledHeaderWrapper","Box","StyledHeaderTypography","StyledFooterWrapper","StyledCardContent","CardContent","StyledFooterTypography","StyledAvatar","Avatar","StyledAvatarGroup","AvatarGroup","StyledCardActionArea","CardActionArea","boardStateSelector","board","boardLoadingSelector","createSelector","boardDataSelector","data","boardStatusSelector","status","boardFilterParams","params","boardUsersSelector","users","boardCreateStateSelector","createState","boardUpdateStateSelector","updateState","boardDeleteStateSelector","deleteState","boardTaskItemSelector","taskItemState","boardProjectStateSelector","projectState","TaskCard","useState","anchorEl","setAnchorEl","onEdit","onDelete","onOpen","useDrag","CARD","item","_id","collect","monitor","isDragging","drag","projectData","useSelector","handleClose","Boolean","id","undefined","sx","borderColor","priority","bgcolor","shortName","key","action","event","currentTarget","MoreVertOutlined","Popover","anchorOrigin","vertical","horizontal","Stack","startIcon","FolderOpen","fontSize","Edit","DeleteForever","fontWeight","wordBreak","max","assignee","length","Tooltip","arrow","height","map","user","firstName","lastName","charAt","toUpperCase","minWidth","marginTop","marginRight","padding","minHeight","backgroundColor","StyledHeader","TaskListCard","onStatusDelete","taskList","show","setShow","dispatch","useDispatch","useDrop","accept","drop","statusId","boardUpdateTaskDrag","isOver","onMouseOver","onMouseOut","displayName","some","task","toLowerCase","filter","TransitionGroup","Collapse","MODAL_CREATE_NAME","MODAL_UPDATE_NAME","MODAL_DELETE_NAME","MODAL_STATUS_DELETE_NAME","MODAL_STATUS_CREATE_NAME","MODAL_OPEN_TASK_NAME","priorityList","StyledButton","StyledFormControl","FormControl","SortingBar","onFilter","onCreateModalOpen","onReset","userList","direction","xs","sm","md","lg","spacing","pt","pl","Add","TextField","onChange","search","target","value","placeholder","InputProps","startAdornment","InputAdornment","position","Search","InputLabel","Select","labelId","label","MenuItem","index","Autocomplete","multiple","options","filterSelectedOptions","disableCloseOnSelect","userData","_","forEach","push","handleAssigneeChange","getOptionLabel","option","renderInput","FilterAltOff","StyledForm","assigneeTaskSchema","yup","shape","email","updatedAt","createdAt","__v","createTaskSchema","required","min","description","of","TaskForm","statusList","name","taskData","useForm","resolver","yupResolver","control","handleSubmit","errors","formState","assigneeList","every","filteredList","onSubmit","values","FormLabel","defaultValue","render","field","helperText","message","multiline","rows","FormHelperText","mt","CreateTaskModal","UpdateTaskModal","fetchData","useEffect","boardItemUpdateDataFetch","LinearProgress","DeleteTaskModal","display","DeleteStatusModal","statusData","CreateStatusModal","createStatusSchema","OpenTaskModal","boardItemOpenDataFetch","alignItems","placement","NoiseControlOff","StyledBoardWrapper","StyledLink","selectors","modalStateSelector","routeId","useParams","boardProjectDataFetch","boardFilterParamsSetAction","projectId","boardUserListFetch","boardStatusListFetch","boardListFetch","handleCreateModalOpenToggle","modalOpenToggleAction","handleUpdateModalOpen","useCallback","boardUpdateItemIdSetAction","handleUpdateModalClose","handleDeleteModalOpen","boardDeleteItemDataSetAction","handleDeleteModalClose","handleDeleteStatusModalOpen","boardDeleteStatusDataSetAction","handleDeleteStatusModalClose","handleCreateStatusModalToogle","handleOpenTaskModalOpen","boardItemIdSetAction","handleOpenTaskModalClose","param","boardFilterParamsResetAction","m","style","orientation","ml","top","fullWidth","boardCreateTaskFetch","boardUpdateTaskFetch","boardDeleteTaskFetch","boardDeleteStatusFetch","boardCreateStatusFetch","modal"],"sourceRoot":""}