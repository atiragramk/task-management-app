{"version":3,"file":"static/js/776.128c9fc8.chunk.js","mappings":"uPAEaA,GAAmBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAH,sGAOhBE,GAAkBF,EAAAA,EAAAA,IAAOG,EAAAA,EAAPH,CAAH,kH,SCwB5B,EA5Ba,WACX,OACE,UAACE,EAAD,CAAiBE,SAAS,KAA1B,WACE,SAACH,EAAA,EAAD,CAAYI,QAAQ,KAApB,oDAGA,SAACN,EAAD,CAAkBO,WAAW,EAA7B,oXAQA,SAACC,EAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,EAAhC,UACE,SAACC,EAAA,EAAD,CACEC,MAAM,UACNN,QAAQ,YACRO,UAAWC,EAAAA,GACXC,GAAG,YAJL,+BAWP,C,kECzBKX,GAAYY,EAAAA,EAAAA,GAAgB,CAChCC,uBAAuBhB,EAAAA,EAAAA,IAAO,MAAO,CACnCiB,KAAM,eACNC,KAAM,OACNC,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOE,KAAMF,EAAO,WAAD,QAAYG,EAAAA,EAAAA,GAAWC,OAAOH,EAAWlB,aAAekB,EAAWI,OAASL,EAAOK,MAAOJ,EAAWK,gBAAkBN,EAAOM,eAC1J,IAEHC,cAAe,SAAAC,GAAO,OAAID,EAAAA,EAAAA,GAAc,CACtCR,MAAOS,EACPZ,KAAM,gBAFc,IA2DxB,K,wIC1EMa,EAAY,CAAC,YAAa,YAAa,UAAW,UAAW,YAiBnE,SAASC,EAAaC,EAAUC,GAC9B,IAAMC,EAAgBC,EAAAA,SAAAA,QAAuBH,GAAUI,OAAOC,SAC9D,OAAOH,EAAcI,QAAO,SAACC,EAAQC,EAAOC,GAS1C,OARAF,EAAOG,KAAKF,GAERC,EAAQP,EAAcS,OAAS,GACjCJ,EAAOG,KAAmBP,EAAAA,aAAmBF,EAAW,CACtDW,IAAK,aAAF,OAAeH,MAIfF,CACR,GAAE,GACJ,CAED,IAuEMM,GAAY7C,EAAAA,EAAAA,IAAO,MAAO,CAC9BiB,KAAM,WACNC,KAAM,OACNC,kBAAmB,SAACC,EAAOC,GACzB,MAAO,CAACA,EAAOE,KAChB,GALevB,EA9DG,SAAC,GAGhB,IAFJsB,EAEI,EAFJA,WACAwB,EACI,EADJA,MAEIzB,GAAS0B,EAAAA,EAAAA,GAAS,CACpBC,QAAS,OACTC,cAAe,WACdC,EAAAA,EAAAA,IAAkB,CACnBJ,MAAAA,IACCK,EAAAA,EAAAA,IAAwB,CACzBC,OAAQ9B,EAAWd,UACnB6C,YAAaP,EAAMO,YAAYD,UAC7B,SAAAE,GAAS,MAAK,CAChBL,cAAeK,EADJ,KAIb,GAAIhC,EAAWb,QAAS,CACtB,IAAM8C,GAAcC,EAAAA,EAAAA,IAAmBV,GACjCW,EAAOC,OAAOC,KAAKb,EAAMO,YAAYD,QAAQd,QAAO,SAACsB,EAAKC,GAK9D,OAJkC,kBAAvBvC,EAAWb,SAA0D,MAAlCa,EAAWb,QAAQoD,IAAuD,kBAAzBvC,EAAWd,WAA8D,MAApCc,EAAWd,UAAUqD,MACvJD,EAAIC,IAAc,GAGbD,CACR,GAAE,CAAC,GACEE,GAAkBX,EAAAA,EAAAA,IAAwB,CAC9CC,OAAQ9B,EAAWd,UACnBiD,KAAAA,IAEIM,GAAgBZ,EAAAA,EAAAA,IAAwB,CAC5CC,OAAQ9B,EAAWb,QACnBgD,KAAAA,IAG6B,kBAApBK,GACTJ,OAAOC,KAAKG,GAAiBE,SAAQ,SAACH,EAAYpB,EAAOY,GAGvD,IAFuBS,EAAgBD,GAElB,CACnB,IAAMI,EAAyBxB,EAAQ,EAAIqB,EAAgBT,EAAYZ,EAAQ,IAAM,SACrFqB,EAAgBD,GAAcI,CAC/B,CACF,IAYH5C,GAAS6C,EAAAA,EAAAA,GAAU7C,GAAQ6B,EAAAA,EAAAA,IAAkB,CAC3CJ,MAAAA,GACCiB,GAXwB,SAACT,EAAWO,GACrC,MAAO,CACL,iCAAiC,QAC/BM,OAAQ,GADV,iBAxDqB3D,EA0DYqD,EAAaC,EAAgBD,GAAcvC,EAAWd,UAzDtF,CACL4D,IAAK,OACL,cAAe,QACfC,OAAQ,MACR,iBAAkB,UAClB7D,MAoD0G8D,EAAAA,EAAAA,IAASf,EAAaD,KA1DvG,IAAA9C,CA6DxB,IAKF,CAGD,OADAa,GAASkD,EAAAA,EAAAA,IAAwBzB,EAAMO,YAAahC,EAErD,IAQKd,EAAqB4B,EAAAA,YAAiB,SAAeN,EAAS2C,GAClE,IAAMC,GAAa7C,EAAAA,EAAAA,GAAc,CAC/BR,MAAOS,EACPZ,KAAM,aAEFG,GAAQsD,EAAAA,EAAAA,GAAaD,GAE3B,EAMIrD,EALFR,UAAAA,OADF,MACc,MADd,IAMIQ,EAJFZ,UAAAA,OAFF,MAEc,SAFd,IAMIY,EAHFX,QAAAA,OAHF,MAGY,EAHZ,EAIEkE,EAEEvD,EAFFuD,QACA3C,EACEZ,EADFY,SAEI4C,GAAQC,EAAAA,EAAAA,GAA8BzD,EAAOU,GAE7CR,EAAa,CACjBd,UAAAA,EACAC,QAAAA,GAEF,OAAoBqE,EAAAA,EAAAA,KAAKjC,GAAWE,EAAAA,EAAAA,GAAS,CAC3CgC,GAAInE,EACJU,WAAYA,EACZkD,IAAKA,GACJI,EAAO,CACR5C,SAAU2C,EAAU5C,EAAaC,EAAU2C,GAAW3C,IAEzD,IA2CD,K,kLCpLMF,EAAY,CAAC,YAAa,YAAa,iBAAkB,QAAS,WAAY,WAS9EkD,GAAeC,EAAAA,EAAAA,KACfC,GAA+BC,EAAAA,EAAAA,GAAa,MAAO,CACvDlE,KAAM,eACNC,KAAM,OACNC,kBAAmB,SAACC,EAAOC,GACzB,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOE,KAAMF,EAAO,WAAD,QAAYG,EAAAA,EAAAA,GAAWC,OAAOH,EAAWlB,aAAekB,EAAWI,OAASL,EAAOK,MAAOJ,EAAWK,gBAAkBN,EAAOM,eAC1J,IAGGyD,EAAuB,SAAAvD,GAAO,OAAIwD,EAAAA,EAAAA,GAAoB,CAC1DjE,MAAOS,EACPZ,KAAM,eACN+D,aAAAA,GAHkC,EAM9BM,EAAoB,SAAChE,EAAYiE,GACrC,IAKEC,EAIElE,EAJFkE,QACA9D,EAGEJ,EAHFI,MACAC,EAEEL,EAFFK,eACAvB,EACEkB,EADFlB,SAEIqF,EAAQ,CACZlE,KAAM,CAAC,OAAQnB,GAAY,WAAJ,QAAeoB,EAAAA,EAAAA,GAAWC,OAAOrB,KAAcsB,GAAS,QAASC,GAAkB,mBAE5G,OAAO+D,EAAAA,EAAAA,GAAeD,GAbW,SAAAvE,GAC/B,OAAOyE,EAAAA,EAAAA,GAAqBJ,EAAerE,EAC5C,GAWsDsE,EACxD,EAEc,SAASzE,IAA8B,IAAd6E,EAAc,uDAAJ,CAAC,EACjD,EAKIA,EAHF5E,sBAAAA,OAFF,MAE0BkE,EAF1B,IAKIU,EAFFhE,cAAAA,OAHF,MAGkBwD,EAHlB,IAKIQ,EADFL,cAAAA,OAJF,MAIkB,eAJlB,EAMMM,EAAgB7E,GAAsB,gBAC1C8B,EAD0C,EAC1CA,MACAxB,EAF0C,EAE1CA,WAF0C,OAGtCyB,EAAAA,EAAAA,GAAS,CACb+C,MAAO,OACPC,WAAY,OACZC,UAAW,aACXC,YAAa,OACbjD,QAAS,UACP1B,EAAWK,iBAAZ,QACDuE,YAAapD,EAAMrC,QAAQ,GAC3B0F,aAAcrD,EAAMrC,QAAQ,IAE3BqC,EAAMO,YAAY+C,GAAG,MAAQ,CAC5BF,YAAapD,EAAMrC,QAAQ,GAC3B0F,aAAcrD,EAAMrC,QAAQ,KAfY,IAiBxC,gBACFqC,EADE,EACFA,MADE,SAEFxB,WACeI,OAASgC,OAAOC,KAAKb,EAAMO,YAAYD,QAAQd,QAAO,SAACsB,EAAKyC,GAC3E,IAAMxC,EAAawC,EACbC,EAAQxD,EAAMO,YAAYD,OAAOS,GASvC,OAPc,IAAVyC,IAEF1C,EAAId,EAAMO,YAAY+C,GAAGvC,IAAe,CACtCzD,SAAU,GAAF,OAAKkG,GAAL,OAAaxD,EAAMO,YAAYkD,QAIpC3C,CACR,GAAE,CAAC,EAfA,IAeI,gBACNd,EADM,EACNA,MACAxB,EAFM,EAENA,WAFM,OAGFyB,EAAAA,EAAAA,GAAS,CAAC,EAA2B,OAAxBzB,EAAWlB,WAAX,UAEhB0C,EAAMO,YAAY+C,GAAG,MAAQ,CAE5BhG,SAAUoG,KAAKC,IAAI3D,EAAMO,YAAYD,OAAOsD,GAAI,OAEjDpF,EAAWlB,UACU,OAAxBkB,EAAWlB,WADR,UAGA0C,EAAMO,YAAY+C,GAAG9E,EAAWlB,UAAY,CAE3CA,SAAU,GAAF,OAAK0C,EAAMO,YAAYD,OAAO9B,EAAWlB,WAAzC,OAAqD0C,EAAMO,YAAYkD,QAd3E,IAiBFpG,EAAyBgC,EAAAA,YAAiB,SAAmBN,EAAS2C,GAC1E,IAAMpD,EAAQQ,EAAcC,GAG1B8E,EAKEvF,EALFuF,UADF,EAMIvF,EAJFR,UAAAA,OAFF,MAEc,MAFd,IAMIQ,EAHFO,eAAAA,OAHF,WAMIP,EAFFM,MAAAA,OAJF,WAMIN,EADFhB,SAAAA,OALF,MAKa,KALb,EAOMwE,GAAQC,EAAAA,EAAAA,GAA8BzD,EAAOU,GAE7CR,GAAayB,EAAAA,EAAAA,GAAS,CAAC,EAAG3B,EAAO,CACrCR,UAAAA,EACAe,eAAAA,EACAD,MAAAA,EACAtB,SAAAA,IAIIoF,EAAUF,EAAkBhE,EAAYiE,GAC9C,OAGET,EAAAA,EAAAA,KAAKe,GAAe9C,EAAAA,EAAAA,GAAS,CAC3BgC,GAAInE,EAEJU,WAAYA,EACZqF,WAAWC,EAAAA,EAAAA,GAAKpB,EAAQjE,KAAMoF,GAC9BnC,IAAKA,GACJI,GAEN,IAeD,OAAOzE,CACR,C","sources":["pages/Home/styled.ts","pages/Home/Home.tsx","../node_modules/@mui/material/Container/Container.js","../node_modules/@mui/material/Stack/Stack.js","../node_modules/@mui/system/esm/Container/createContainer.js"],"sourcesContent":["import { Container, styled, Typography } from \"@mui/material\";\n\nexport const StyledTypography = styled(Typography)`\n  margin: 20px;\n  font-weight: 300;\n  width: 600px;\n  text-align: center;\n`;\n\nexport const StyledContainer = styled(Container)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 40px;\n`;\n","import { Box, Button, Container, Stack, Typography } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { StyledContainer, StyledTypography } from \"./styled\";\n\nconst Home = () => {\n  return (\n    <StyledContainer maxWidth=\"xl\">\n      <Typography variant=\"h2\">\n        Organize your work and life, finally.\n      </Typography>\n      <StyledTypography paragraph={true}>\n        Task management is the process of creating, prioritizing, delegating,\n        and monitoring tasks to ensure they are completed within given\n        deadlines. It also involves organizing the workflow and resolving\n        bottlenecks to ensure efficient task completion. Task management is an\n        essential component of effective project management and successful\n        business operations.\n      </StyledTypography>\n      <Stack direction=\"row\" spacing={2}>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          component={Link}\n          to=\"/projects\"\n        >\n          Start project\n        </Button>\n      </Stack>\n    </StyledContainer>\n  );\n};\n\nexport default Home;\n","/* eslint-disable material-ui/mui-name-matches-component-name */\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUnarySpacing, getValue, handleBreakpoints, mergeBreakpointsInOrder, unstable_extendSxProp as extendSxProp, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n\n    return output;\n  }, []);\n}\n\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\n\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex',\n    flexDirection: 'column'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nconst StackRoot = styled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(style);\nconst Stack = /*#__PURE__*/React.forwardRef(function Stack(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  });\n  const props = extendSxProp(themeProps);\n\n  const {\n    component = 'div',\n    direction = 'column',\n    spacing = 0,\n    divider,\n    children\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = {\n    direction,\n    spacing\n  };\n  return /*#__PURE__*/_jsx(StackRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: divider ? joinChildren(children, divider) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stack;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\n\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\n\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\n\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth && // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n\n    const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      fixed = false,\n      maxWidth = 'lg'\n    } = props,\n          other = _objectWithoutPropertiesLoose(props, _excluded);\n\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    }); // @ts-ignore module augmentation fails if custom breakpoints are used\n\n\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes\n  /* remove-proptypes */\n  = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes\n    /* @typescript-to-proptypes-ignore */\n    .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}"],"names":["StyledTypography","styled","Typography","StyledContainer","Container","maxWidth","variant","paragraph","Stack","direction","spacing","Button","color","component","Link","to","createContainer","createStyledComponent","name","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","fixed","disableGutters","useThemeProps","inProps","_excluded","joinChildren","children","separator","childrenArray","React","filter","Boolean","reduce","output","child","index","push","length","key","StackRoot","theme","_extends","display","flexDirection","handleBreakpoints","resolveBreakpointValues","values","breakpoints","propValue","transformer","createUnarySpacing","base","Object","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","deepmerge","margin","row","column","getValue","mergeBreakpointsInOrder","ref","themeProps","extendSxProp","divider","other","_objectWithoutPropertiesLoose","_jsx","as","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","useThemePropsDefault","useThemePropsSystem","useUtilityClasses","componentName","classes","slots","composeClasses","generateUtilityClass","options","ContainerRoot","width","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","up","breakpointValueKey","value","unit","Math","max","xs","className","clsx"],"sourceRoot":""}